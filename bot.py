import os
from dotenv import load_dotenv
import json
import tempfile
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# -----------------------------
# 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
# -----------------------------
load_dotenv()

def ensure_credentials_file():
    value = os.getenv("GOOGLE_CREDENTIALS_JSON", "").strip()
    if not value:
        raise ValueError("GOOGLE_CREDENTIALS_JSON –ø—É—Å—Ç. –£–∫–∞–∂–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –≤—Å—Ç–∞–≤—å JSON-–∫–ª—é—á —Ü–µ–ª–∏–∫–æ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.")
    if os.path.isfile(value):
        return value
    if value.startswith("{"):
        tmp = tempfile.NamedTemporaryFile(delete=False, suffix=".json")
        tmp.write(value.encode("utf-8"))
        tmp.flush()
        return tmp.name
    raise ValueError("GOOGLE_CREDENTIALS_JSON –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∏ –Ω–∞ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, –Ω–∏ –Ω–∞ JSON.")

TOKEN = os.getenv("TELEGRAM_TOKEN")
CREDENTIALS_FILE = ensure_credentials_file()
SPREADSHEET_NAME = os.getenv("SPREADSHEET_NAME")

if not TOKEN or not CREDENTIALS_FILE or not SPREADSHEET_NAME:
    print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env: TELEGRAM_TOKEN, GOOGLE_CREDENTIALS_JSON, SPREADSHEET_NAME –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
    exit(1)

# -----------------------------
# 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
# -----------------------------
try:
    scope = ["https://spreadsheets.google.com/feeds",
             "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
    client = gspread.authorize(creds)
    sheet = client.open(SPREADSHEET_NAME).sheet1
except Exception as e:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ client_email –≤ Google Sheets")
    print(e)
    exit(1)

# -----------------------------
# 3. –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
# -----------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/addincome <—Å—É–º–º–∞> - –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥\n"
        "/addexpense <—Å—É–º–º–∞> - –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥\n"
        "/balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"
    )

async def add_income(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        amount = float(context.args[0])
        sheet.append_row(["–î–æ—Ö–æ–¥", amount])
        await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ—Ö–æ–¥: {amount}")
    except:
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: /addincome 1000")

async def add_expense(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        amount = float(context.args[0])
        sheet.append_row(["–†–∞—Å—Ö–æ–¥", amount])
        await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞—Å—Ö–æ–¥: {amount}")
    except:
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: /addexpense 500")

async def balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    records = sheet.get_all_records()
    income = sum(r['Amount'] for r in records if r['Type'] == "–î–æ—Ö–æ–¥")
    expense = sum(r['Amount'] for r in records if r['Type'] == "–†–∞—Å—Ö–æ–¥")
    await update.message.reply_text(
        f"üí∞ –ë–∞–ª–∞–Ω—Å:\n–î–æ—Ö–æ–¥: {income}\n–†–∞—Å—Ö–æ–¥: {expense}\n–ò—Ç–æ–≥–æ: {income - expense}"
    )

# -----------------------------
# 4. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# -----------------------------
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("addincome", add_income))
app.add_handler(CommandHandler("addexpense", add_expense))
app.add_handler(CommandHandler("balance", balance))

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
app.run_polling()